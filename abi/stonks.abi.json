[
  {
    "type": "impl",
    "name": "StonksImpl",
    "interface_name": "onchain::stonks::IStonks"
  },
  {
    "type": "struct",
    "name": "core::array::Span::<core::starknet::contract_address::ContractAddress>",
    "members": [
      {
        "name": "snapshot",
        "type": "@core::array::Array::<core::starknet::contract_address::ContractAddress>"
      }
    ]
  },
  {
    "type": "struct",
    "name": "core::byte_array::ByteArray",
    "members": [
      {
        "name": "data",
        "type": "core::array::Array::<core::bytes_31::bytes31>"
      },
      {
        "name": "pending_word",
        "type": "core::felt252"
      },
      {
        "name": "pending_word_len",
        "type": "core::integer::u32"
      }
    ]
  },
  {
    "type": "struct",
    "name": "core::integer::u256",
    "members": [
      {
        "name": "low",
        "type": "core::integer::u128"
      },
      {
        "name": "high",
        "type": "core::integer::u128"
      }
    ]
  },
  {
    "type": "struct",
    "name": "onchain::stonk::StonkToken::InitParams",
    "members": [
      {
        "name": "name",
        "type": "core::byte_array::ByteArray"
      },
      {
        "name": "symbol",
        "type": "core::byte_array::ByteArray"
      },
      {
        "name": "denomination",
        "type": "core::integer::u256"
      }
    ]
  },
  {
    "type": "enum",
    "name": "core::bool",
    "variants": [
      {
        "name": "False",
        "type": "()"
      },
      {
        "name": "True",
        "type": "()"
      }
    ]
  },
  {
    "type": "interface",
    "name": "onchain::stonks::IStonks",
    "items": [
      {
        "type": "function",
        "name": "get_stonks",
        "inputs": [],
        "outputs": [
          {
            "type": "core::array::Span::<core::starknet::contract_address::ContractAddress>"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "add_stonk",
        "inputs": [
          {
            "name": "class_hash",
            "type": "core::starknet::class_hash::ClassHash"
          },
          {
            "name": "stonk",
            "type": "onchain::stonk::StonkToken::InitParams"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "add_deployed_stonk",
        "inputs": [
          {
            "name": "stonk",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "get_devmode",
        "inputs": [],
        "outputs": [
          {
            "type": "core::bool"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "claim",
        "inputs": [
          {
            "name": "stonk_id",
            "type": "core::integer::u64"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      }
    ]
  },
  {
    "type": "struct",
    "name": "onchain::stonks::Stonks::InitParams",
    "members": [
      {
        "name": "stonk_token_hash",
        "type": "core::starknet::class_hash::ClassHash"
      },
      {
        "name": "init_tokens",
        "type": "core::array::Array::<onchain::stonk::StonkToken::InitParams>"
      },
      {
        "name": "devmode",
        "type": "core::bool"
      }
    ]
  },
  {
    "type": "constructor",
    "name": "constructor",
    "inputs": [
      {
        "name": "init_params",
        "type": "onchain::stonks::Stonks::InitParams"
      }
    ]
  },
  {
    "type": "event",
    "name": "onchain::stonks::Stonks::NewStonk",
    "kind": "struct",
    "members": [
      {
        "name": "id",
        "type": "core::integer::u64",
        "kind": "key"
      },
      {
        "name": "address",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "data"
      },
      {
        "name": "metadata",
        "type": "onchain::stonk::StonkToken::InitParams",
        "kind": "data"
      }
    ]
  },
  {
    "type": "event",
    "name": "onchain::stonks::Stonks::StonkClaimed",
    "kind": "struct",
    "members": [
      {
        "name": "stonk",
        "type": "core::integer::u64",
        "kind": "key"
      },
      {
        "name": "claimer",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "key"
      },
      {
        "name": "amount",
        "type": "core::integer::u256",
        "kind": "data"
      }
    ]
  },
  {
    "type": "event",
    "name": "onchain::stonks::Stonks::Event",
    "kind": "enum",
    "variants": [
      {
        "name": "NewStonk",
        "type": "onchain::stonks::Stonks::NewStonk",
        "kind": "nested"
      },
      {
        "name": "StonkClaimed",
        "type": "onchain::stonks::Stonks::StonkClaimed",
        "kind": "nested"
      }
    ]
  }
]
